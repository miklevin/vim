#!/home/healus/py310/bin/python

# When setting up a new LXD container:
# lxc config device add GlookingLass github disk source=/mnt/c/Users/mikle/github/ path=/home/ubuntu/github/
# lxc config device add GlookingLass dotssh disk source=/mnt/c/Users/mikle/.ssh/ path=/home/ubuntu/.ssh/

import shlex
import shutil
import argparse
import pandas as pd
from os import system
from sys import stdout
from subprocess import Popen, PIPE


# Set Default Number of Files to Edit
default_number = 100

aparser = argparse.ArgumentParser()
add_arg = aparser.add_argument
add_arg("-n", "--number", required=False)
args = aparser.parse_args()
number = args.number
df = pd.read_csv("~/github/journal/sites.csv", delimiter="|")
df = df.applymap(lambda x: x.strip())
df.columns = [x.strip() for x in df.columns]
if number == None:
    df = df.head(default_number)
elif number.isnumeric():
    number = int(number)
    if number > df.shape[0]:
        number = df.shape[0]
    df = df.head(number)
    print('hit')

alist = df[['path']].values.tolist()
journals = " ".join([f'~/{x[0]}/journal.md' for x in alist])
edit_journals = f"vim {journals} ~/.vimrc"
system(edit_journals)


def flush(std):
    for line in std:
        line = line.strip()
        if line:
            print(line)
            stdout.flush()


def git(cwd, args):
    cmd = ["/usr/bin/git"] + shlex.split(args)
    print(f"COMMAND: << {shlex.join(cmd)} >>")
    process = Popen(
        args=cmd,
        cwd=cwd,
        stdout=PIPE,
        stderr=PIPE,
        shell=False,
        bufsize=1,
        universal_newlines=True,
    )
    flush(process.stdout)
    flush(process.stderr)


shutil.copyfile("/home/healus/.vimrc", "/home/healus/github/vim/.vimrc")
shutil.copyfile("/home/healus/.bash_profile", "/home/healus/github/vim/.bash_profile")
shutil.copyfile("/usr/local/sbin/all", "/home/healus/github/vim/all")
shutil.copyfile("/usr/local/sbin/jn", "/home/healus/github/vim/jn")

loc = "/home/healus/github/vim"
git(loc, 'commit -am "Pushing .vimrc to Github..."')
git(loc, "push")

print("Done!")
