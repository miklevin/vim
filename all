#! /usr/bin/env python3.10

import shlex
import shutil
import argparse
import pandas as pd
from os import system
from os import getuid
from sys import stdout
from art import text2art
from pwd import getpwuid
from subprocess import Popen, PIPE

# Set Default Number of Files to Edit
default_number = 3

# Get Linux Username for portability between systems
username = getpwuid(getuid())[0]

# Use big pretty ascii art to keep user informed
fig = lambda x: print(text2art(x))
fig("Editing Journals")

# Determine how many journals to edit at once
aparser = argparse.ArgumentParser()
add_arg = aparser.add_argument
add_arg("-n", "--number", required=False)
args = aparser.parse_args()
number = args.number
df = pd.read_csv("~/repos/journal/sites.csv", delimiter="|")
df = df.applymap(lambda x: x.strip())
df.columns = [x.strip() for x in df.columns]
if number == None:
    df = df.head(default_number)
elif number.isnumeric():
    number = int(number)
    if number > df.shape[0]:
        number = df.shape[0]
    df = df.head(number)
    print('hit')


def flush(std):
    for line in std:
        line = line.strip()
        if line:
            print(line)
            stdout.flush()


def git(cwd, args):
    cmd = ["/usr/bin/git"] + shlex.split(args)
    print(f"COMMAND: << {shlex.join(cmd)} >>")
    process = Popen(
        args=cmd,
        cwd=cwd,
        stdout=PIPE,
        stderr=PIPE,
        shell=False,
        bufsize=1,
        universal_newlines=True,
    )
    flush(process.stdout)
    flush(process.stderr)


alist = df[['path']].values.tolist()
journals = " ".join([f'~/{x[0]}/journal.md' for x in alist])

fig("Pulling Repos")

print("vim")
loc = f"/home/{username}/repos/vim"
git(loc, "pull")

for item in alist:
    repo = item[0]
    print(repo)
    loc = f"/home/{username}/{repo}"
    git(loc, 'pull')
    print()

edit_journals = f"vim {journals} ~/.vimrc"
system(edit_journals)

shutil.copyfile(f"/home/{username}/.screenrc", f"/home/{username}/repos/vim/.screenrc")
shutil.copyfile(f"/home/{username}/.gitconfig", f"/home/{username}/repos/vim/.gitconfig")
shutil.copyfile(f"/home/{username}/.bash_prompt", f"/home/{username}/repos/vim/.bash_prompt")
shutil.copyfile(f"/home/{username}/.bash_profile", f"/home/{username}/repos/vim/.bash_profile")
shutil.copyfile(f"/usr/local/sbin/all", f"/home/{username}/repos/vim/all")

fig("Pushing Repos")

print("vim")
loc = f"/home/{username}/repos/vim"
git(loc, 'commit -am "Pushing vim to Github..."')
git(loc, "push")
print()

for item in alist:
    repo = item[0]
    print(repo)
    loc = f"/home/{username}/{repo}"
    git(loc, f'commit -am "Pushing {repo} to Github..."')
    git(loc, "push")
    print()

fig("Done!")
