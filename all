#! /usr/bin/env python
#        _             _ _           _ _
# __   _(_)_ __ ___   (_) |_    __ _| | |   Why edit 1 file when you can
# \ \ / / | '_ ` _ \  | | __|  / _` | | |   edit everything all at once?
#  \ V /| | | | | | | | | |_  | (_| | | |   Why mess with tabs when you can
#   \_/ |_|_| |_| |_| |_|\__|  \__,_|_|_|   :bn into buffers? Test 6.


import shlex
import shutil
from os import system
from os import getuid
from sys import stdout
from time import sleep
from pwd import getpwuid
from pyfiglet import Figlet
from subprocess import Popen, PIPE
print("Hit")

# Get Linux Username for portability between systems
USERNAME = getpwuid(getuid())[0]
GIT_EXE = "/usr/bin/git"
REPOS = f"/home/{USERNAME}/repos/"
HIDE = f"{REPOS}hide/"

# Files to edit
edit_files = [
    f"{HIDE}MikeLev.in/journal.md",
    "~/.config/nvim/init.vim",
    f"{REPOS}yamlchop/chop.py",
    f"{HIDE}journal/journal.txt",
    "~/py311/bin/all",
]

# Places to put files after editing
copy_to_destination = {
    "/home/ubuntu/py311/bin/all": f"{REPOS}vim/all",
    "/home/ubuntu/.config/nvim/init.vim": f"{REPOS}vim/init.vim",
}

# Repos to push after editing
git_repos = [
    f"{REPOS}vim",
    f"{REPOS}yamlchop",
    f"{HIDE}journal",
    f"{HIDE}MikeLev.in",
]


# Load function early so we can use it, pronto!
def fig(text, description=None, font="standard"):
    #  _____ _       _      _
    # |  ___(_) __ _| | ___| |_
    # | |_  | |/ _` | |/ _ \ __|
    # |  _| | | (_| | |  __/ |_
    # |_|   |_|\__, |_|\___|\__|
    #          |___/
    """Let them see text!"""
    f = Figlet(font=font)
    print(f.renderText(text))
    if description:
        print(description)
    sleep(0.5)


def flush(std):
    """Flush a stream."""
    for line in std:
        line = line.strip()
        if line:
            print(line)
            stdout.flush()


def git(cwd, line_command):
    #        _ _ 
    #   __ _(_) |_   This is it. This is git.
    #  / _` | | __|  It does the simple deed.
    # | (_| | | |_   From a shell what it does well
    #  \__, |_|\__|  Is move things where you need.
    #  |___/       
    """Run a Linux git command."""
    cmd = [GIT_EXE] + shlex.split(line_command)
    show_cmd = " ".join(cmd)
    print(f"Running: {show_cmd}")
    process = Popen(
        args=cmd,
        cwd=cwd,
        stdout=PIPE,
        stderr=PIPE,
        shell=False,
        bufsize=1,
        universal_newlines=True,
    )
    flush(process.stdout)


def git_pull():
    for arepo in git_repos:
        fig(f"{arepo.split('/')[-1]}", font="cybermedium")
        git(arepo, "pull")
        print()


def load_editor():
    print("Loading editor...")
    files = " ".join(edit_files)
    command = f"nvim {files}"
    system(command)


def git_push():
    print("Hit")
    for repo in git_repos:
        fig(f"{repo.split('/')[-1]}", font="cybermedium")
        print(f"Pushing {repo} to Github...")
        git(repo, "commit -am 'pushing to github...'")
        git(repo, "push")
        print()


def copy_files():
    for source, destination in copy_to_destination.items():
        print(f"Copying {source} to {destination}")
        shutil.copyfile(source, destination)


def reverse_copy():
    for destination, source in copy_to_destination.items():
        print(f"Copying {source} to {destination}")
        shutil.copyfile(source, destination)


fig("vim it all...", "Loading data into multiple vim buffers\n")

# Main Control Flow
git_pull()
reverse_copy()
load_editor()
copy_files()
git_push()
