#! /usr/bin/env python
#        _             _ _           _ _
# __   _(_)_ __ ___   (_) |_    __ _| | |
# \ \ / / | '_ ` _ \  | | __|  / _` | | |
#  \ V /| | | | | | | | | |_  | (_| | | |
#   \_/ |_|_| |_| |_| |_|\__|  \__,_|_|_|


import shlex
import shutil
from os import system
from os import getuid
from sys import stdout
from time import sleep
from pwd import getpwuid
from pyfiglet import Figlet
from subprocess import Popen, PIPE


# Get Linux Username for portability between systems
USERNAME = getpwuid(getuid())[0]
GIT_EXE = "/usr/bin/git"
REPOS = f"/home/{USERNAME}/repos/"
HIDE = f"{REPOS}hide/"

# Files to edit
edit_files = [
    f"{HIDE}MikeLev.in/journal.md",
    f"{HIDE}journal/journal.txt",
    "~/.config/nvim/init.vim",
    f"{REPOS}skite/chopchop.py",
]

# Places to put files after editing
copy_to_destination = {
    "/home/ubuntu/py311/bin/all": f"{REPOS}vim/all",
    "/home/ubuntu/.config/nvim/init.vim": f"{REPOS}vim/init.vim",
}

# Repos to push after editing
commit_and_push = [
    f"{REPOS}vim",
    f"{REPOS}skite",
    f"{HIDE}journal",
    f"{HIDE}MikeLev.in",
]


# Load function early so we can use it, pronto!
def fig(text, description=None, font="standard"):
    #  _____ _       _      _
    # |  ___(_) __ _| | ___| |_
    # | |_  | |/ _` | |/ _ \ __|
    # |  _| | | (_| | |  __/ |_
    # |_|   |_|\__, |_|\___|\__|
    #          |___/
    """Let them see text!"""
    f = Figlet(font=font)
    print(f.renderText(text))
    if description:
        print(description)
    sleep(0.5)


def flush(std):
    """Flush a stream."""
    for line in std:
        line = line.strip()
        if line:
            print(line)
            stdout.flush()


def git(cwd, line_command):
    """Run a Linux git command."""
    cmd = [GIT_EXE] + shlex.split(line_command)
    show_cmd = " ".join(cmd)
    print(f"Running: {show_cmd}")
    process = Popen(
        args=cmd,
        cwd=cwd,
        stdout=PIPE,
        stderr=PIPE,
        shell=False,
        bufsize=1,
        universal_newlines=True,
    )
    flush(process.stdout)


def git_pull():
    for arepo in commit_and_push:
        fig(f"{arepo.split('/')[-1]}", font="cybermedium")
        git(arepo, "pull")
        print()


def load_editor():
    print("Loading editor...")
    files = " ".join(edit_files)
    command = f"nvim {files}"
    system(command)


def copy_files():
    for source, destination in copy_to_destination.items():
        shutil.copyfile(source, destination)


def git_push():
    for repo in commit_and_push:
        fig(f"{repo.split('/')[-1]}", font="cybermedium")
        print(f"Pushing {repo} to Github...")
        git(repo, "commit -am 'pushing to github...'")
        git(repo, "push")
        print()


fig("vim it all...", "Loading data into multiple vim buffers\n")

# Main Control Flow
git_pull()
load_editor()
copy_files()
git_push()
